
drop schema if exists UWMSoc;

create schema UWMSoc;
use UWMSoc;


CREATE TABLE MEDIA_STORAGE (
	MEDIA_ID INT(64)  PRIMARY KEY,
    CAPTION VARCHAR(45) ,
    IMAGE MEDIUMBLOB 
);
CREATE TABLE USER_INFO (
	USER_ID INT(64) PRIMARY KEY,
    PFP_ID INT(64) NOT NULL,
    BIO VARCHAR(200),
    MAJOR VARCHAR(64),
    DISPLAY_NAME VARCHAR(128),
    FOREIGN KEY (PFP_ID) REFERENCES MEDIA_STORAGE(MEDIA_ID)
);

CREATE TABLE LOGIN_INFO (
  USER_ID      INT(64) PRIMARY KEY,
  EMAIL     VARCHAR(128) NOT NULL,
  PASSWORD     VARCHAR(64) NOT NULL,
  FOREIGN KEY (USER_ID) REFERENCES USER_INFO(USER_ID)
);

CREATE TABLE POST_INFO (
	POST_ID INT(64) PRIMARY KEY,
    USER_ID INT(64) NOT NULL,
    POST_TEXT VARCHAR(200) NOT NULL,
    POST_MEDIA INT(64),
    FOREIGN KEY (USER_ID) REFERENCES USER_INFO(USER_ID)
);

CREATE TABLE EVENT_INFO (
	POST_ID INT(64) PRIMARY KEY,
    FOREIGN KEY (POST_ID) REFERENCES POST_INFO(POST_ID)
);

CREATE TABLE UPDATE_INFO (
	POST_ID INT(64) PRIMARY KEY,
	PARENT_POST_ID INT(64),
	FOREIGN KEY (PARENT_POST_ID) REFERENCES POST_INFO(POST_ID),
    FOREIGN KEY (POST_ID) REFERENCES POST_INFO(POST_ID)
);

CREATE TABLE POST_LIKE (
	LIKE_ID INT(64) PRIMARY KEY,
    USER_ID INT(64) NOT NULL,
    POST_ID INT(64) NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USER_INFO(USER_ID),
    FOREIGN KEY (POST_ID) REFERENCES POST_INFO(POST_ID)
);

CREATE TABLE RSVP (
	RSVP_ID INT(64) PRIMARY KEY,
	USER_ID INT(64) NOT NULL,
    POST_ID INT(64) NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USER_INFO(USER_ID),
    FOREIGN KEY (POST_ID) REFERENCES EVENT_INFO(POST_ID)
);

CREATE TABLE POST_MEDIA (
	POST_ID INT(64) PRIMARY KEY NOT NULL,
    MEDIA_1 INT(64),
    MEDIA_2 INT(64),
    MEDIA_3 INT(64),
    MEDIA_4 INT(64),
	FOREIGN KEY (POST_ID) REFERENCES POST_INFO(POST_ID),
    FOREIGN KEY (MEDIA_1) REFERENCES MEDIA_STORAGE(MEDIA_ID),
    FOREIGN KEY (MEDIA_2) REFERENCES MEDIA_STORAGE(MEDIA_ID),
    FOREIGN KEY (MEDIA_3) REFERENCES MEDIA_STORAGE(MEDIA_ID),
    FOREIGN KEY (MEDIA_4) REFERENCES MEDIA_STORAGE(MEDIA_ID)
);

CREATE TABLE MESSAGE(
	MESSAGE_ID INT(64) PRIMARY KEY,
    SENDER_ID INT(64) NOT NULL,
    RECIPIENT_ID INT(64) NOT NULL,
    MESSAGE_TEXT VARCHAR(200) NOT NULL,
    READ_STATE BOOLEAN,
    TIME_SENT DATETIME,
    FOREIGN KEY (SENDER_ID) REFERENCES USER_INFO(USER_ID),
    FOREIGN KEY (RECIPIENT_ID) REFERENCES USER_INFO(USER_ID)
    
);
INSERT INTO MEDIA_STORAGE VALUES (1, null, null);
INSERT INTO USER_INFO VALUES (1234, 1, 'I am an Admin', 'CompSci', 'DB ADMIN');
INSERT INTO LOGIN_INFO VALUES (1234, 'Admin@uwm.edu', 'Password');

INSERT INTO POST_INFO VALUES (012843,  1234, 'This is a fake post in our social media database!', null);

show tables;
SELECT * FROM event_info;
SELECT * FROM login_info;
SELECT * FROM media_storage;
SELECT * FROM post_info;
SELECT * FROM post_like;
SELECT * FROM post_media;
SELECT * FROM rsvp;
SELECT * FROM update_info;
SELECT * FROM user_info;
